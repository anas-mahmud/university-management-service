{
  issues: [
    {
      code: 'invalid_type',
      expected: 'string',
      received: 'undefined',
      path: [ 'body', 'role' ],
      message: 'role is required'
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  name: 'ZodError',
  level: 'error',
  message: 'globalErrorHandler ~ [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "undefined",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "role"\n' +
    '    ],\n' +
    '    "message": "role is required"\n' +
    '  }\n' +
    ']',
  stack: 'ZodError: [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "undefined",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "role"\n' +
    '    ],\n' +
    '    "message": "role is required"\n' +
    '  }\n' +
    ']\n' +
    '    at Object.get error [as error] (D:\\Programming hero\\Apollo Level 2\\Backend Braniac\\university-management-service\\node_modules\\zod\\lib\\types.js:43:31)\n' +
    '    at ZodObject.parseAsync (D:\\Programming hero\\Apollo Level 2\\Backend Braniac\\university-management-service\\node_modules\\zod\\lib\\types.js:164:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'University Management !!',
  timestamp: '2023-08-15T03:45:55.977Z'
}
{
  issues: [
    {
      code: 'invalid_type',
      expected: 'string',
      received: 'undefined',
      path: [ 'body', 'role' ],
      message: 'role is required'
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  name: 'ZodError',
  level: 'error',
  message: 'globalErrorHandler ~ [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "undefined",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "role"\n' +
    '    ],\n' +
    '    "message": "role is required"\n' +
    '  }\n' +
    ']',
  stack: 'ZodError: [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "undefined",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "role"\n' +
    '    ],\n' +
    '    "message": "role is required"\n' +
    '  }\n' +
    ']\n' +
    '    at Object.get error [as error] (D:\\Programming hero\\Apollo Level 2\\Backend Braniac\\university-management-service\\node_modules\\zod\\lib\\types.js:43:31)\n' +
    '    at ZodObject.parseAsync (D:\\Programming hero\\Apollo Level 2\\Backend Braniac\\university-management-service\\node_modules\\zod\\lib\\types.js:164:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'University Management !!',
  timestamp: '2023-08-15T03:46:12.865Z'
}
{
  statusCode: 409,
  level: 'error',
  label: 'University Management !!',
  timestamp: '2023-08-15T03:47:29.968Z'
}
{
  statusCode: 409,
  level: 'error',
  label: 'University Management !!',
  timestamp: '2023-08-15T03:47:29.968Z'
}
{
  statusCode: 409,
  level: 'error',
  label: 'University Management !!',
  timestamp: '2023-08-15T03:53:22.822Z'
}
{
  issues: [
    {
      code: 'invalid_type',
      expected: 'string',
      received: 'undefined',
      path: [ 'body', 'role' ],
      message: 'role is required'
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  name: 'ZodError',
  level: 'error',
  message: 'globalErrorHandler ~ [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "undefined",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "role"\n' +
    '    ],\n' +
    '    "message": "role is required"\n' +
    '  }\n' +
    ']',
  stack: 'ZodError: [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "undefined",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "role"\n' +
    '    ],\n' +
    '    "message": "role is required"\n' +
    '  }\n' +
    ']\n' +
    '    at Object.get error [as error] (D:\\Programming hero\\Apollo Level 2\\Backend Braniac\\university-management-service\\node_modules\\zod\\lib\\types.js:43:31)\n' +
    '    at ZodObject.parseAsync (D:\\Programming hero\\Apollo Level 2\\Backend Braniac\\university-management-service\\node_modules\\zod\\lib\\types.js:164:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'University Management !!',
  timestamp: '2023-08-15T03:55:21.967Z'
}
{
  issues: [
    {
      code: 'invalid_type',
      expected: 'string',
      received: 'undefined',
      path: [ 'body', 'role' ],
      message: 'role is required'
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  name: 'ZodError',
  level: 'error',
  message: 'globalErrorHandler ~ [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "undefined",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "role"\n' +
    '    ],\n' +
    '    "message": "role is required"\n' +
    '  }\n' +
    ']',
  stack: 'ZodError: [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "undefined",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "role"\n' +
    '    ],\n' +
    '    "message": "role is required"\n' +
    '  }\n' +
    ']\n' +
    '    at Object.get error [as error] (D:\\Programming hero\\Apollo Level 2\\Backend Braniac\\university-management-service\\node_modules\\zod\\lib\\types.js:43:31)\n' +
    '    at ZodObject.parseAsync (D:\\Programming hero\\Apollo Level 2\\Backend Braniac\\university-management-service\\node_modules\\zod\\lib\\types.js:164:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'University Management !!',
  timestamp: '2023-08-15T03:57:02.409Z'
}
{
  issues: [
    {
      code: 'invalid_type',
      expected: 'string',
      received: 'undefined',
      path: [ 'body', 'role' ],
      message: 'Required'
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  name: 'ZodError',
  level: 'error',
  message: 'globalErrorHandler ~ [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "undefined",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "role"\n' +
    '    ],\n' +
    '    "message": "Required"\n' +
    '  }\n' +
    ']',
  stack: 'ZodError: [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "undefined",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "role"\n' +
    '    ],\n' +
    '    "message": "Required"\n' +
    '  }\n' +
    ']\n' +
    '    at Object.get error [as error] (D:\\Programming hero\\Apollo Level 2\\Backend Braniac\\university-management-service\\node_modules\\zod\\lib\\types.js:43:31)\n' +
    '    at ZodObject.parseAsync (D:\\Programming hero\\Apollo Level 2\\Backend Braniac\\university-management-service\\node_modules\\zod\\lib\\types.js:164:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'University Management !!',
  timestamp: '2023-08-15T03:58:33.530Z'
}
{
  issues: [
    {
      code: 'invalid_type',
      expected: 'string',
      received: 'undefined',
      path: [ 'body', 'role' ],
      message: 'role is required'
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  name: 'ZodError',
  level: 'error',
  message: 'globalErrorHandler ~ [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "undefined",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "role"\n' +
    '    ],\n' +
    '    "message": "role is required"\n' +
    '  }\n' +
    ']',
  stack: 'ZodError: [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "undefined",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "role"\n' +
    '    ],\n' +
    '    "message": "role is required"\n' +
    '  }\n' +
    ']\n' +
    '    at Object.get error [as error] (D:\\Programming hero\\Apollo Level 2\\Backend Braniac\\university-management-service\\node_modules\\zod\\lib\\types.js:43:31)\n' +
    '    at ZodObject.parseAsync (D:\\Programming hero\\Apollo Level 2\\Backend Braniac\\university-management-service\\node_modules\\zod\\lib\\types.js:164:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'University Management !!',
  timestamp: '2023-08-15T03:58:48.846Z'
}
{
  issues: [
    {
      code: 'invalid_type',
      expected: 'string',
      received: 'undefined',
      path: [ 'body', 'role' ],
      message: 'role is required'
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  name: 'ZodError',
  level: 'error',
  message: 'globalErrorHandler ~ [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "undefined",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "role"\n' +
    '    ],\n' +
    '    "message": "role is required"\n' +
    '  }\n' +
    ']',
  stack: 'ZodError: [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "undefined",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "role"\n' +
    '    ],\n' +
    '    "message": "role is required"\n' +
    '  }\n' +
    ']\n' +
    '    at Object.get error [as error] (D:\\Programming hero\\Apollo Level 2\\Backend Braniac\\university-management-service\\node_modules\\zod\\lib\\types.js:43:31)\n' +
    '    at ZodObject.parseAsync (D:\\Programming hero\\Apollo Level 2\\Backend Braniac\\university-management-service\\node_modules\\zod\\lib\\types.js:164:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'University Management !!',
  timestamp: '2023-08-15T03:59:34.611Z'
}
